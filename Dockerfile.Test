#syntax=docker/dockerfile:1

# Versions
FROM dunglas/frankenphp:1-php8.3 AS frankenphp_upstream

ARG APT_FLAGS_COMMON="-qq -y"
ARG APT_FLAGS_PERSISTENT="${APT_FLAGS_COMMON} --no-install-recommends"

SHELL ["/bin/bash", "-o", "pipefail", "-c"]

WORKDIR /app
VOLUME /app/var/

COPY --link frankenphp/conf.d/10-app.ini ${PHP_INI_DIR}/app.conf.d/
COPY --link --chmod=755 frankenphp/docker-entrypoint.sh /usr/local/bin/docker-entrypoint
COPY --link frankenphp/Caddyfile /etc/caddy/Caddyfile

ENTRYPOINT ["docker-entrypoint"]

HEALTHCHECK --start-period=60s CMD curl -f http://localhost:2019/metrics || exit 1
CMD [ "frankenphp", "run", "--config", "/etc/caddy/Caddyfile" ]

# Angular build
FROM node:bookworm AS build_angular

SHELL ["/bin/bash", "-o", "pipefail", "-c"]

WORKDIR /src/app

ARG APT_FLAGS_COMMON="-qq -y"
ARG APT_FLAGS_PERSISTENT="${APT_FLAGS_COMMON} --no-install-recommends"

COPY . .
RUN apt-get update ${APT_FLAGS_COMMON} && apt-get install ${APT_FLAGS_PERSISTENT} \
      bash \
      git && \
    yarn global add @angular/cli; \
    yarn install; \
    npm run build-dev; \
    npm run build-dev:defaultExt
RUN ls /src/app/extensions/defaultExt \
    ls /src/app; ls /src/app/public

FROM frankenphp_upstream AS final

WORKDIR /app
# copy sources
COPY . .
COPY --from=build_angular /src/app/public/dist ./public/
COPY --from=build_angular /src/app/dist .
COPY --from=build_angular /src/app/public/extensions ./public
